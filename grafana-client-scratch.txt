SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^(server3|server4)$/) AND time >= now() - 1h GROUP BY  "hostname"

http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^(server3|server4)$/) AND time >= now() - 1h GROUP BY  "hostname"&epoch=ms
																SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^(server3|server4)$/) AND time >= now() - 1h GROUP BY  "hostname"
																
http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^server3$/) AND time >= now() - 1h GROUP BY  "hostname"&epoch=ms


URL:	http://play.grafana.org/api/datasources/proxy/2/query?
GET Params:
db=site&
q=SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^server3$/) AND time >= now() - 1h GROUP BY  "hostname"&
epoch=ms

http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT%20value%20FROM%20%22logins.count%22%20WHERE%20%28%22datacenter%22%20%3D~%20/%5EEurope%24/%20AND%20%22hostname%22%20%3D~%20/%5Eserver3%24/%29%20AND%20time%20%3E%3D%20now%28%29%20-%201h%20GROUP%20BY%20%20%22hostname%22&epoch=ms


{
  "results" : [
    {
      "series" : [
        {
          "values" : [
            [
              1513258463346,
              4.8992798918642769E+001
            ],
            [
              1513258473337,
              5.0804493103823148E+001
            ],
            
URL: http://grafana.dfd-hamburg.de/api/datasources/proxy/9/query
db=telegraf&
q=SELECT mean("IdleWorkers") FROM "apache" WHERE "host" =~ /^(fidipmid01\.dfd-hamburg\.de|fidipmid31\.dfd-hamburg\.de)$/ AND "port" <> '44000' AND time > now() - 1h GROUP BY time(30s), "tag1" fill(null)&
epoch=ms

http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT%20value%20FROM%20%22logins.count%22%20WHERE%20%28%22datacenter%22%20%3D~%20/%5EEurope%24/%20AND%20%22hostname%22%20%3D~%20/%5Eserver3%24/%29%20AND%20time%20%3E%3D%20now%28%29%20-%201h%20GROUP%20BY%20%20%22hostname%22&epoch=ms

1514040275683
1514040975

http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT%20%22value%22%20FROM%20%22logins.count%22%20WHERE%20(%22datacenter%22%20=~%20/^Europe$/%20AND%20%22hostname%22%20=~%20/^(server3|server4)$/)%20AND%20time%20%3E=%20now()%20-%2010m%20GROUP%20BY%20%22hostname%22&epoch=s
1514040486

    // get request params from main thread
    R := TStringList.Create;
    R.Delimiter := '&';
    R.values['db'] := Form1.Edit2.Text;
    R.values['q'] := URLEncode(Form1.Edit3.Text);
    R.values['epoch'] := Form1.Edit4.Text;
    Form1.Memo1.Lines.Add(R.DelimitedText);
    Refresh := dataRefresh * 1000;
    

    // pass data to main thread
    jData := GetJSON(S);
    //Memo1.Lines.Add(jData.FormatJSON());
    //jd2 := jData.GetPath('results[0].series[0].values');

    //jd3:= jData.GetPath('results[0].series[5].columns');
    jd3 := jData.GetPath('results[0].series[0].columns');
    ja3 := TJSONArray(jd3);
    for je3 in ja3 do
    begin
        //Memo1.Lines.Add(je3.Value.AsString);
        if (je3.Value.AsString = 'time') then
        begin
            //Memo1.Lines.Add(je3.Key);
            timecolumn := je3.Key;
        end
        else
            valuename := je3.Value.AsString;
    end;
    Form1.Memo1.Lines.Add(timecolumn);
    Form1.Memo1.Lines.Add(valuename);

    //jd2 := jData.GetPath('results[0].series[5].values');
    jd2 := jData.GetPath('results[0].series[0].values');
    jArray := TJSONArray(jd2);

    Form1.Memo1.Lines.Add(DateTimeToStr(Now));
    lastDValue := 0;
    i := 0;
    for jElem in jArray do
    begin
        dtime := jElem.Value.GetPath('[0]').AsString;
        if (jElem.Value.GetPath('[1]').IsNull) then
            dvalue := lastDValue
        else
        begin
            dvalue := jElem.Value.GetPath('[1]').AsFloat;
            lastDValue := dvalue;
        end;
        SetLength(dArray, i + 1);
        dArray[i] := dvalue;
        maxv := MaxValue(dArray);
        minv := MinValue(dArray);
        //Memo1.Lines.Add(i.toString + ': ' + dvalue.ToString);
        i := i + 1;
    end;
    numDatapoints := i - 1;
    Form1.Memo1.Lines.Add('Datapoints: ' + numDatapoints.ToString);
    Form1.Memo1.Lines.Add('min value: ' + minv.ToString);
    Form1.Memo1.Lines.Add('max value: ' + maxv.ToString);
    //Memo1.Lines.Add(jArray.FormatJSON);
    Form1.Memo1.Lines.Add(DateTimeToStr(Now));

    Form1.PaintBox1.Invalidate;

            fAnswer := HttpClient.Get(fUrl + '?' + fRequest.DelimitedText);

.

http://play.grafana.org/api/datasources/proxy/2/query?db=site&q=SELECT "value" FROM "logins.count" WHERE time >= now() - 15m GROUP BY "hostname", "datacenter", "source";SELECT "value" FROM "cpu" WHERE time >= now() - 15m GROUP BY "datacenter", "hostname", "source"&epoch=ms

http://play.grafana.org/api/datasources/proxy/2/query?
db=site&
q=SELECT "value" FROM "logins.count" WHERE time >= now() - 15m GROUP BY "hostname", "datacenter", "source";
SELECT "value" FROM "cpu" WHERE time >= now() - 15m GROUP BY "datacenter", "hostname", "source"&
epoch=ms

SELECT "value" FROM "logins.count" WHERE time >= now() - 15m GROUP BY "hostname", "datacenter", "source";SELECT "value" FROM "cpu" WHERE time >= now() - 15m GROUP BY "datacenter", "hostname", "source"

procedure TForm1.PaintBox1Paint(Sender: TObject);
var
    n, w, h: integer;
    yoffset: double;
begin
    PaintBox1.Canvas.Clear;
    if (numDatapoints > 0) then
    begin
        w := PaintBox1.ClientWidth;
        h := PaintBox1.ClientHeight;
        xstep := w / numDatapoints;
        yscale := h / (maxv - minv);
        yoffset := 0 - minv;

        Memo1.Lines.Add('w: ' + w.ToString + ' h: ' + h.ToString);
        Memo1.Lines.Add('xstep: ' + xstep.ToString);
        Memo1.Lines.Add('yscale: ' + yscale.ToString);
        Memo1.Lines.Add('yoffset: ' + yoffset.ToString);

        PaintBox1.Canvas.MoveTo(0, h - Round(yoffset * yscale));
        PaintBox1.Canvas.LineTo(w, h - Round(yoffset * yscale));

        for i := 0 to numDatapoints do
        begin // paint lines between datapoints
            x := Round(i * xstep);
            y := Round((dArray[i] + yoffset) * yscale);
            if (i = 0) then
            begin
                PaintBox1.Canvas.MoveTo(x, h - y);
            end
            else
            begin
                PaintBox1.Canvas.LineTo(x, h - y);
                //Memo1.Lines.Add('i: ' + i.ToString + '  x: ' + x.ToString + '  y: ' + y.ToString);
            end;
        end;
    end;
end;


SELECT value FROM "logins.count" WHERE ("datacenter" =~ /^Europe$/ AND "hostname" =~ /^server3$/) AND time >= now() - 5m GROUP BY  "hostname"

